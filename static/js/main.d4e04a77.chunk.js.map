{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","in","transformProps","exitTransform","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderDish","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","dishDetailComponent","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","toggleModal","bind","state","isModalOpen","this","setState","values","rating","Button","color","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Label","md","htmlFor","Col","select","model","text","placeholder","validators","minLength","show","messages","required","textarea","rows","type","value","Component","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","mod","size","offset","checkbox","class","RenderLeader","Media","left","object","body","About","leaders","CardHeader","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_LEADERS","LEADERS_LOADING","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","selectedDish","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","location","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4e04a77.chunk.js","sourcesContent":["import React from 'react';\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React  from 'react';\r\n//import DishDetail from './DishdetailComponent';\r\nimport { FadeTransform } from 'C:/Users/vivek/node_modules/react-animation-components';\r\n  import { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'C:/Users/vivek/node_modules/reactstrap';\r\nimport { Link } from 'C:/Users/vivek/node_modules/react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n         </FadeTransform>\r\n        );\r\n    }\r\n    \r\n\r\n/*class Menu extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          selectedDish: null\r\n      }\r\n  }\r\n\r\n  onDishSelect(dish) {\r\n      this.setState({ selectedDish: dish});\r\n  }\r\n\r\n   renderDish(dish) {\r\n    if (dish != null)\r\n        return(\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                  <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        ); */\r\n//}\r\n\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n          <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n            <RenderMenuItem dish={dish} />\r\n          </div>\r\n          \r\n        );  \r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n      return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n           \r\n                {menu}\r\n            \r\n            </div>   \r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n     /* return (\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  {menu}\r\n                  \r\n              </div>\r\n               <DishDetail dish ={this.state.selectedDish} />\r\n               </div>\r\n      );*/\r\n  \r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg,  CardText, CardBody,CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,\r\n     ModalBody, ModalHeader, Label, Col, Row  } from 'C:/Users/vivek/node_modules/reactstrap';\r\n  import { Link } from 'C:/Users/vivek/node_modules/react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'C:/Users/vivek/node_modules/react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'C:/Users/vivek/node_modules/react-animation-components';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                < div >\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n             </div>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if(comments != null){\r\n           \r\n            const dishDetailComponent = comments.map((comment) =>{\r\n                return(\r\n                    <Fade in>\r\n                    <li key = {comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author}, \r\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                    </Fade>\r\n                );\r\n\r\n            });\r\n            \r\n            return(\r\n                <div className=\"\">\r\n                    \r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\" >\r\n                    <Stagger in>\r\n                        {dishDetailComponent}\r\n                        </Stagger>\r\n                    </ul>\r\n                    \r\n                    <CommentForm dishId={dishId} postComment={postComment}  />\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    const DishDetail = (props)=> {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish != null){\r\n            return(\r\n                <div className=\"container\">\r\n                     <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                      <div className=\"col-12\">\r\n                           <h3>{props.dish.name}</h3>\r\n                           <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                          <RenderDish dish={props.dish} />\r\n                          \r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                          \r\n                          <RenderComments comments={props.comments} \r\n                                postComment={props.postComment}\r\n                                dishId={props.dish.id}    \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        // console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n       \r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color=\"secondary\" outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\">Submit Comment</span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"rating\">Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"author\">Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                             minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" \r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"comment\">Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" \r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DishDetail ;","import React, { Component } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'C:/Users/vivek/node_modules/reactstrap';\r\nimport { NavLink } from 'C:/Users/vivek/node_modules/react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto App-logo\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                              <NavItem>\r\n                                  <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                              </NavItem>\r\n                              <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                              </NavItem>\r\n                              <NavItem>\r\n                                 <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                              </NavItem>\r\n                               <NavItem>\r\n                                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                               </NavItem>\r\n                               \r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                           </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    \r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'C:/Users/vivek/node_modules/react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                    </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     )\r\n    }\r\n    \r\n    export default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'C:/Users/vivek/node_modules/reactstrap';\r\n    import { Loading } from './LoadingComponent';\r\n    import { baseUrl } from '../shared/baseUrl';\r\n    import { FadeTransform } from 'C:/Users/vivek/node_modules/react-animation-components';\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n        if (isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                    <h4>{errMess}</h4>\r\n            );\r\n        }\r\n        else\r\n        return(\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label  } from 'C:/Users/vivek/node_modules/reactstrap';\r\nimport { Link } from 'C:/Users/vivek/node_modules/react-router-dom';\r\nimport {  Control, Form, Errors, actions  } from 'C:/Users/vivek/node_modules/react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n     constructor(props){\r\n         super(props);\r\n        /* this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };*/\r\n\r\n        //this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleBlur = this.handleBlur.bind(this);\r\n        \r\n    }\r\n   /* handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n            if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }*/\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Thank you for your feedback!\\n ' + JSON.stringify(values));\r\n      // event.preventDefault();\r\n      this.props.postFeedback(values.firstname, values.lastname, \r\n        values.telnum, values.email, values.agree, values.contactType, values.message);\r\n       this.props.resetFeedbackForm();\r\n    }\r\n     \r\n    render(){\r\n        //const errors= this.validate(this.state.firstname, this.state.lastname,this.state.telnum,this.state.email );\r\n        return(\r\n            <div className=\"container\">\r\n                 <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12 \">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form  model=\"feedback\"  onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required , minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col mod={{size: 3, offset: 7}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                             <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\" />\r\n                                              <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                               </Col>\r\n                               <Col mod={{size: 1, offset: 1}}>\r\n                                     <Control.select model=\".contactType\" className=\"form-control\" name=\"contactType\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                               <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" rows=\"12\" className=\"form-control\" name=\"message\" />\r\n                               </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:4, offset: 3}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col md={{size:4, offset: 1}}>\r\n                                    <Button type=\"cancel\" class=\"close\" onClick={this.props.resetFeedbackForm()} color=\"secondary\" >\r\n                                        Cancel</Button>\r\n \r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n/*\r\n<Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>                        \r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} required />\r\n                                        <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n*/\r\n  \r\n\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'C:/Users/vivek/node_modules/reactstrap';\r\nimport { Link } from 'C:/Users/vivek/node_modules/react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'C:/Users/vivek/node_modules/react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return (\r\n        //<div key={leader.id} className=\"col-12 \">\r\n\r\n            <Media >\r\n                <Media left className=\"col-12 col-md-2\">\r\n                    <Media object src={baseUrl + leader.image}  alt={leader.name}/>\r\n                </Media>\r\n                <Media  body className=\"col-12 col-md-10\" >\r\n                    <Media className=\"row\">\r\n                      <Media className=\"col-12\">\r\n                         <h3>  {leader.name}</h3> \r\n                      </Media>\r\n                      <Media className=\"col-12\">\r\n                          <h7>{leader.designation }</h7>\r\n                      </Media>\r\n                        <Media className='col-12'> \r\n                           {leader.description }\r\n                        </Media>\r\n                    </Media>\r\n                    \r\n               \r\n                   \r\n                </Media>\r\n           </Media>\r\n\r\n       // </div>\r\n    );\r\n\r\n}\r\n\r\nfunction About(props) {\r\n    \r\n    if (props.leaders.isLoading) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Loading />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if (props.leaders.errMess) {\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h4>{props.leaders.errMess}</h4>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    else\r\n    \r\n       \r\n    \r\n        \r\n       \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2 \">\r\n                    <h3>About Us</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 \">\r\n                  <hr></hr>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-5\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                    \r\n                    <Stagger in>\r\n                     {  props.leaders.leaders.map((leader) => {\r\n       \r\n                    return (\r\n                      <Fade in>\r\n                        <RenderLeader leader={leader} />\r\n                      </Fade>\r\n                    );\r\n                  \r\n                    })}\r\n                  \r\n                    </Stagger>\r\n                     \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;  ","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n    \r\n});\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addLeaders(promos)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n  }\r\n  newFeedback.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + 'feedback', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      }\r\n      else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {alert(response); return response;})\r\n    .catch(error => {\r\n      console.log('post feedback ', error.message);\r\n      alert('Your feedback could not be posted\\nError: ' + error.message);\r\n    });\r\n\r\n};","import React, { Component } from 'react';\r\n//import { Navbar, NavbarBrand } from 'C:/Users/vivek/node_modules/reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\n//import { DISHES } from '../shared/dishes';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'C:/Users/vivek/node_modules/react-router-dom';\r\nimport {connect} from 'C:/Users/vivek/node_modules/react-redux';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { TransitionGroup, CSSTransition } from 'C:/Users/vivek/node_modules/react-transition-group';\r\n\r\nimport { actions } from 'C:/Users/vivek/node_modules/react-redux-form';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders} from '../redux/ActionCreators';\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => \r\n    dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n \r\n    onDishSelect(dishId) {\r\n      this.setState({ selectedDish: dishId});\r\n    }\r\n    \r\n  \r\n   /* render() {\r\n      return (\r\n        <div>\r\n          \r\n          <Header />\r\n         <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n         <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n        <Footer />\r\n          </div>\r\n    );\r\n  }\r\n}*/\r\ncomponentDidMount() {\r\n  this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n}\r\nrender() {\r\n  \r\n  \r\n  const HomePage = () => {\r\n    return(\r\n        <Home \r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n    );\r\n  }\r\n\r\n  const DishWithId = ({match}) => {\r\n    return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}/>\r\n    );\r\n  };\r\n  return (\r\n      <div>\r\n         <Header />\r\n        <div>\r\n         <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                <Route path='/home' component={HomePage} />\r\n                <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                <Route path='/menu/:dishId' component={DishWithId} />\r\n                <Route exact path='/contactus' component={() => <Contact\r\n                   postFeedback={this.props.postFeedback}  resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                <Redirect to=\"/home\" />\r\n             \r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n          <Footer />\r\n      </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          \r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_PROMOS:\r\nreturn {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\ncase ActionTypes.PROMOS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\ncase ActionTypes.PROMOS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","import * as ActionTypes from './ActionTypes';\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_LEADERS:\r\nreturn {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\ncase ActionTypes.LEADERS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\ncase ActionTypes.LEADERS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","//import logo from './logo.svg';\nimport './App.css';\nimport 'D:/Bootstrap4/conFusion/node_modules/bootstrap/dist/css/bootstrap.min.css';\n//import { Navbar, NavbarBrand } from 'C:/Users/vivek/node_modules/reactstrap';\n//import Menu from './components/MenuComponent';\n//import { DISHES } from './shared/dishes';\nimport { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'C:/Users/vivek/node_modules/react-router-dom';\nimport { Provider } from 'C:/Users/vivek/node_modules/react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\nclass App extends Component { \n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n//function App() { \n  /*class App extends Component{ \n    constructor(props) {\n      super(props);\n      this.state = {\n        dishes: DISHES\n      };\n    }\n  \n  render(){  return (\n    <div className=\"App\">\n        <Navbar dark color=\"primary\">\n          <div className=\"container\">\n            <NavbarBrand href=\"/\">Ristorante Con Fusion </NavbarBrand>\n          </div>\n        </Navbar>\n        <Menu dishes={this.state.dishes} />\n      </div>\n      \n  );\n  }\n}*/\n\nexport default App;\n","\r\n\r\n// We are combining reducer. Now, we have no need of reducer.js \r\nimport {createStore, combineReducers, applyMiddleware} from 'C:/Users/vivek/node_modules/redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'C:/Users/vivek/node_modules/redux-thunk';\r\nimport logger from 'C:/Users/vivek/node_modules/redux-logger';\r\nimport { createForms } from 'C:/Users/vivek/node_modules/react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n// import {createStore} from 'C:/Users/vivek/node_modules/redux';\r\n// import { Reducer, initialState } from './reducer'\r\n\r\n// export const ConfigureStore = () => {\r\n//     const store = createStore(\r\n//         Reducer, // reducer\r\n//         initialState, // our initialState\r\n//     );\r\n\r\n//     return store;\r\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'C:/Users/vivek/node_modules/react';\nimport ReactDOM from 'C:/Users/vivek/node_modules/react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'D:/Bootstrap4/conFusion/node_modules/font-awesome/css/font-awesome.css';\nimport 'D:/Bootstrap4/conFusion/node_modules/bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}